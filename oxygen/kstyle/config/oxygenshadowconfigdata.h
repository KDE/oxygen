// This file is generated by kconfig_compiler from oxygenshadow.kcfg.
// All changes you do to this file will be lost.
#ifndef OXYGENSHADOWCONFIGDATA_H
#define OXYGENSHADOWCONFIGDATA_H

#include <kglobal.h>
#include <kconfigskeleton.h>
#include <kdebug.h>

namespace Oxygen
{

    class ShadowConfigData : public KConfigSkeleton
    {
        public:

        explicit ShadowConfigData( const QString& group );
        ~ShadowConfigData();

        /**
        Set InnerColor
        */
        void setInnerColor( const QColor & v )
        {
            if (!isImmutable( QString::fromLatin1( "InnerColor" ) ))
                mInnerColor = v;
        }

        /**
        Get InnerColor
        */
        QColor innerColor() const
        {
            return mInnerColor;
        }

        /**
        Set OuterColor
        */
        void setOuterColor( const QColor & v )
        {
            if (!isImmutable( QString::fromLatin1( "OuterColor" ) ))
                mOuterColor = v;
        }

        /**
        Get OuterColor
        */
        QColor outerColor() const
        {
            return mOuterColor;
        }

        /**
        Set Size
        */
        void setSize( int v )
        {
            if (!isImmutable( QString::fromLatin1( "Size" ) ))
                mSize = v;
        }

        /**
        Get Size
        */
        int size() const
        {
            return mSize;
        }

        /**
        Set UseOuterColor
        */
        void setUseOuterColor( bool v )
        {
            if (!isImmutable( QString::fromLatin1( "UseOuterColor" ) ))
                mUseOuterColor = v;
        }

        /**
        Get UseOuterColor
        */
        bool useOuterColor() const
        {
            return mUseOuterColor;
        }

        /**
        Set VerticalOffset
        */
        void setVerticalOffset( double v )
        {
            if (!isImmutable( QString::fromLatin1( "VerticalOffset" ) ))
                mVerticalOffset = v;
        }

        /**
        Get VerticalOffset
        */
        double verticalOffset() const
        {
            return mVerticalOffset;
        }

        protected:

        // InactiveShadow
        QColor mInnerColor;
        QColor mOuterColor;
        int mSize;
        bool mUseOuterColor;
        double mVerticalOffset;

        private:
    };
}

#endif

